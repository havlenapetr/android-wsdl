package org.jinouts.ws;

import java.net.MalformedURLException;
import java.net.URL;
import org.jinouts.xml.namespace.QName;
import org.jinouts.xml.ws.WebEndpoint;
import org.jinouts.xml.ws.WebServiceClient;
import org.jinouts.xml.ws.WebServiceFeature;
import org.jinouts.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2012-05-23T20:13:43.796+06:00
 * Generated source version: 2.5.1
 * 
 */
@WebServiceClient(name = "AndProxyClientReqTestWS", 
                  wsdlLocation = "http://116.68.194.105:9011/AndProxyClientReqTestWS?WSDL",
                  targetNamespace = "http://ws.jinouts.org/") 
public class AndProxyClientReqTestWS_Service extends org.jinouts.ws.JinosService {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.jinouts.org/", "AndProxyClientReqTestWS");
    public final static QName AndProxyClientReqTestWSPort = new QName("http://ws.jinouts.org/", "AndProxyClientReqTestWSPort");
    static {
        URL url = null;
        try {
            url = new URL("http://116.68.194.105:9011/AndProxyClientReqTestWS?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AndProxyClientReqTestWS_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://116.68.194.105:9011/AndProxyClientReqTestWS?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public AndProxyClientReqTestWS_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AndProxyClientReqTestWS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AndProxyClientReqTestWS_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AndProxyClientReqTestWS
     */
    @WebEndpoint(name = "AndProxyClientReqTestWSPort")
    public AndProxyClientReqTestWS getAndProxyClientReqTestWSPort() {
        return super.getPort(AndProxyClientReqTestWSPort, AndProxyClientReqTestWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AndProxyClientReqTestWS
     */
    @WebEndpoint(name = "AndProxyClientReqTestWSPort")
    public AndProxyClientReqTestWS getAndProxyClientReqTestWSPort(WebServiceFeature... features) {
        return super.getPort(AndProxyClientReqTestWSPort, AndProxyClientReqTestWS.class, features);
    }

}
